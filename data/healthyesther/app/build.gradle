/**
 * Â© Robert Williamson 2014-2016.
 * This program is distributed under the terms of the GNU General Public License.
 */
apply plugin: 'com.android.application'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

def dropboxKey = System.getenv('HEALTHY_ESTHER_DROPBOX_KEY')
def dropboxSecret = System.getenv('HEALTHY_ESTHER_DROPBOX_SECRET')

android {
    buildTypes {
        debug {
            buildConfigField 'String', 'HEALTHY_ESTHER_DROPBOX_KEY', "\"${dropboxKey}\""
            resValue 'string', 'HEALTHY_ESTHER_DROPBOX_KEY', "db-${dropboxKey}"
            buildConfigField 'String', 'HEALTHY_ESTHER_DROPBOX_SECRET', "\"${dropboxSecret}\""
        }
        release {
            buildConfigField 'String', 'HEALTHY_ESTHER_DROPBOX_KEY', "\"${dropboxKey}\""
            resValue 'string', 'HEALTHY_ESTHER_DROPBOX_KEY', "db-${dropboxKey}"
            buildConfigField 'String', 'HEALTHY_ESTHER_DROPBOX_SECRET', "\"${dropboxSecret}\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            keyAlias 'test1'
            keyPassword System.getenv('HEALTHY_ESTHER_KEY_PASSWORD')
            storeFile rootProject.file('fakeKeyStore/fake.jks')
            storePassword System.getenv('HEALTHY_ESTHER_STORE_PASSWORD')
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.robwilliamson.healthyesther"
        minSdkVersion 26
        targetSdkVersion 27
        versionCode 29
        versionName "0.11.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //noinspection GroovyAssignabilityCheck
        signingConfig signingConfigs.release
        multiDexEnabled true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    dexOptions {
    }
    compileOptions {
        //noinspection GroovyAssignabilityCheck
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
}

task checkEnvironnment {
    configure {
        if (dropboxKey == null) {
            throw new GradleException("No Dropbox API key found. Please define it in the HEALTHY_ESTHER_DROPBOX_KEY environment variable.")
        }

        if (dropboxSecret == null) {
            throw new GradleException("No Dropbox API secret found. Please define it in the HEALTHY_ESTHER_DROPBOX_SECRET environment variable.")
        }
    }
}

tasks.preBuild.dependsOn(":dbcodemodel:sqlite2Java")

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.code.findbugs:jsr305:2.0.1'
    implementation 'com.dropbox.core:dropbox-core-sdk:3.0.0'
    implementation 'com.android.support:support-v4:27.1.0'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.jjoe64:graphview:3.1.3'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support:support-annotations:27.1.0'
    implementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'org.robolectric:shadows-support-v4:3.0'
    testImplementation 'org.mockito:mockito-core:2.13.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    implementation project(':dbcodemodel')
    implementation project(':includes')
}
